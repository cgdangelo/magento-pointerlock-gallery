// Generated by CoffeeScript 1.6.3
(function() {
  var $;

  $ = jQuery;

  $(function() {
    var $canvas, $document, $stashImage, canvas, ctx, drawImage, getMovement, isPointerLocked, scale, stashImage, viewportImage, x, y;
    $document = $(document);
    canvas = document.getElementById('fancy-gallery');
    $canvas = $(canvas);
    ctx = canvas.getContext('2d');
    scale = 1;
    x = y = 0;
    stashImage = document.getElementById('image');
    $stashImage = $(stashImage);
    viewportImage = new Image();
    canvas.requestPointerLock = canvas.requestPointerLock || canvas.mozRequestPointerLock || canvas.webkitRequestPointerLock;
    document.exitPointerLock = document.exitPointerLock || document.mozExitPointerLock || document.webkitExitPointerLock;
    isPointerLocked = function() {
      return document.pointerLockElement || document.mozPointerLockElement || document.webkitPointerLockElement;
    };
    getMovement = function(e) {
      return [e.movementX || e.mozMovementX || e.webkitMovementX, e.movementY || e.mozMovementY || e.webkitMovementY];
    };
    drawImage = function() {
      ctx.save();
      ctx.setTransform(1, 0, 0, 1, 0, 0);
      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);
      if (x > 0) {
        x = 0;
      }
      if (x < canvas.width - (canvas.width * scale)) {
        x = canvas.width - (canvas.width * scale);
      }
      if (y > 0) {
        y = 0;
      }
      if (y < canvas.height - (canvas.height * scale)) {
        y = canvas.height - (canvas.height * scale);
      }
      ctx.translate(x, y);
      return ctx.drawImage(viewportImage, 0, 0, canvas.width * scale, canvas.height * scale);
    };
    viewportImage.onload = drawImage;
    $document.on('click', function() {
      if (isPointerLocked()) {
        return document.exitPointerLock();
      }
    });
    $canvas.on('click', function() {
      if (!isPointerLocked()) {
        return canvas.requestPointerLock();
      }
    }).on('DOMMouseScroll mousewheel', function(evt) {
      var delta, originalEvent;
      if (!isPointerLocked()) {
        return;
      }
      originalEvent = evt.originalEvent;
      delta = originalEvent.wheelDelta ? originalEvent.wheelDelta / 120 : -originalEvent.detail / 3;
      originalEvent.preventDefault();
      originalEvent.returnValue = false;
      scale += delta * 0.03;
      if (scale < 1) {
        scale = 1;
      } else if (scale > 4) {
        scale = 4;
      } else if (scale > 2.5 && viewportImage.src !== image.getAttribute('data-large-src')) {
        viewportImage.src = image.getAttribute('data-large-src');
      }
      return drawImage();
    }).on('mousemove', function(evt) {
      var dx, dy, originalEvent, _ref;
      if (!isPointerLocked()) {
        return;
      }
      originalEvent = evt.originalEvent;
      _ref = getMovement(originalEvent), dx = _ref[0], dy = _ref[1];
      x += dx;
      y += dy;
      return drawImage();
    });
    $('.more-views ul li a img').on('click', function() {
      var attr, _i, _len, _ref;
      _ref = ['base', 'large'];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        attr = _ref[_i];
        stashImage.setAttribute("data-" + attr + "-src", $(this).attr("data-" + attr + "-src"));
      }
      return viewportImage.src = stashImage.src = $(this).attr('data-base-src');
    });
    return viewportImage.src = stashImage.src;
  });

}).call(this);
